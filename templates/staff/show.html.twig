{% extends 'base.html.twig' %}

{# Permet de rendre la récuperation des données plus pratique #}
{% set dataThisStaff = dataOneStaff.data.Staff %}

{% block title %}{{ dataThisStaff.name.full ? dataThisStaff.name.full : "?" }}{% endblock %}

{% block body %}
    <main class="characterContainer">
        <div class="characterTopContainer">
            <div class="characterTopContent">
                <div class="characterTopLeftContainer">
                    <figure>
                        <img src="{{ dataThisStaff.image.large ? dataThisStaff.image.large : dataThisStaff.image.medium }}" alt="{{ dataThisStaff.name.full ? dataThisStaff.name.full : "Unknown" }}" class="characterTopContentImage">
                    </figure>
                </div>
                <div class="characterTopContentCenterContainer">
                    <h1 class="characterPartTitle">{{ dataThisStaff.name.full ? dataThisStaff.name.full : "?" }}</h1>
                    <p class="characterTopContentTraitText">Age : <span class="characterTopContentTraitApi">{{ dataThisStaff.age ? dataThisStaff.age : "?" }}</span></p>
                    <p class="characterTopContentTraitText">Gender : <span class="characterTopContentTraitApi">{{ dataThisStaff.gender ? dataThisStaff.gender : "?" }}</span></p>
                    {# Voir les différents contenu des description pour adapter l'affichage #}
                    <p class="characterTopContentRegularText">
                        {{ dataThisStaff.description ? dataThisStaff.description|raw|nl2br : "No description yet" }}
                    </p>
                </div>
            </div>
        </div>
        <div class="characterRemainingContainer">
            <h2 class="characterPartTitle">WORKS</h2>
            <div class="characterMultipleAnimes">
                {# On va créer un tableau pour regrouper les animés où le membre du staff a eu plusieurs rôles #}
                {% set animeRoles = {} %}
                {% for media in dataThisStaff.staffMedia.edges %}
                    {# On récupère les données que l'ont veut (id, title, coverImage et staffRole) #}
                    {% set id = media.node.id %}
                    {% set title = media.node.title.romaji %}
                    {% set coverImage = media.node.coverImage.large %}
                    {% set role = media.staffRole %}
                    {# On vérifie si l'anime est défini dans animeRoles #}
                    {% if animeRoles[title] is not defined %}
                        {# Si l'animé n'est pas définie, on la crée #}
                        {% set animeRoles = animeRoles|merge({(title): {'id': id, 'title': title, 'coverImage': coverImage, 'roles': [role]}}) %}
                    {% else %}
                        {# Sinon on le crée #}
                        {% set animeRoles = animeRoles|merge({(title): animeRoles[title]|merge({'roles': animeRoles[title].roles|merge([role])})}) %}
                    {% endif %}
                {% endfor %}
                {# On fait l'affichage grâce a animeRoles #}
                {% for anime in animeRoles %}
                    <figure class="homeOneAnime">
                        <div class="homeOneAnimeImageInfo">
                            <img src="{{ anime.coverImage }}" alt="Cover Image of {{ anime.title ? anime.title : "Unknown" }}" class="homeOneAnimeImage">
                            <section class="homeHoverContent">
                                <div class="characterRemainingVoiceActorContainer roles">
                                    {% for role in anime.roles %}
                                        <p class="characterRemainingVoiceActorName roles">- {{ role }}</p>
                                    {% endfor %}
                                </div>
                            </section>
                        </div>
                        <figcaption class="homeOneAnimeTitle">{{ anime.title ? anime.title : "Unknown" }}</figcaption>
                    </figure>
                {% endfor %}
            </div>
        </div>
    </main>
{% endblock %}