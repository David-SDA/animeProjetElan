{% extends 'base.html.twig' %}

{% block title %}Your calendar{% endblock %}

{% block body %}
    <main>
        <h1 class="title">Your Calendar</h1>
        <div id="calendar">
            <a href="{{ path('add_evenement') }}" class="profileInfosButton">Add a new event</a>
        </div>
    </main>
{% endblock %}

{% block javascripts %}
    {{ parent() }}

     {# Ajout de Full Calendar #}
     <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.9/index.global.min.js" integrity="sha256-alsi6DkexWIdeVDEct5s7cnqsWgOqsh2ihuIZbU6H3I=" crossorigin="anonymous"></script>

     {# Affichage d'un calendrier #}
    <script>
        window.onload = () => {
            let calendarElt = document.querySelector("#calendar");

            let calendar = new FullCalendar.Calendar(calendarElt, {
                initialView: "timeGridWeek",
                allDaySlot: false,
                locale: "locale",
                headerToolbar: {
                    start: "prev,next today",
                    center: "title",
                    end: "dayGridMonth,timeGridWeek,listWeek",
                },
                firstDay: 1,
                buttonText: {
                    month: "Month",
                    week: "Week",
                    list: "List",
                    today: "Today",
                },
                views: {
                    dayGrid: {
                        dayMaxEvents: 3,
                    },
                    timeGrid: {
                        eventMaxStack: 2
                    },
                    listWeek: {
                        // Dans la vue de la liste des évènement de la semaine, on va personaliser l'affichage de l'évènement
                        eventContent: function(args) {
                            // Création d'un conteneur pour la partie de titre et liens de l'évènement
                            let eventContainer = document.createElement("div");
                            // Ajout d'une classe pour celui-ci
                            eventContainer.classList.add("eventContainer");
        
                            // Création d'un conteneur pour le titre
                            let titleContainer = document.createElement("div");
                            // Ajout d'une classe pour celui-ci
                            titleContainer.classList.add("eventTitleContainer");
                            // Ajout du nom de l'évènement
                            titleContainer.textContent = args.event.title;

                            // Création d'un conteneur pour les liens
                            let linksContainer = document.createElement("div");
                            // Ajout d'une classe
                            linksContainer.classList.add("eventLinksContainer");

                            // Création d'un lien pour l'édition 
                            let editLink = document.createElement("a");
                            // Ajout d'une classe
                            editLink.classList.add("settingsChangePseudo");
                            // Ajout du chemin du lien
                            editLink.href = "{{ path('edit_evenement', { id: 'EVENT_ID' }) }}".replace("EVENT_ID", args.event.id);
                            // Ajout du texte du lien
                            editLink.innerHTML = "<i class='fa-solid fa-pen-to-square'></i>";
        
                            // Création d'un lien pour la suppression
                            let deleteLink = document.createElement("a");
                            // Ajout d'une classe
                            deleteLink.classList.add("talkDeleteLink");
                            // Ajout du chemin du lien
                            deleteLink.href = "{{ path('delete_evenement', { id: 'EVENT_ID' }) }}".replace("EVENT_ID", args.event.id);
                            // Ajout du texte du lien
                            deleteLink.innerHTML = "<i class='fa-solid fa-trash-can'></i>";
        
                            // Ajout des liens dans leur conteneur
                            linksContainer.appendChild(editLink);
                            linksContainer.appendChild(deleteLink);

                            // Ajout des 2 conteneur dans un conteneur parent
                            eventContainer.appendChild(titleContainer);
                            eventContainer.appendChild(linksContainer);
        
                            // On retourne l'élement crée pour chaque évènement qui représente notre manière d'afficher l'évènement
                            return { domNodes: [eventContainer] };
                        }
                    }
                },
                events: {{ dataEvents|raw }},
            });
            
            calendar.render();
        };
    </script>
{% endblock %}