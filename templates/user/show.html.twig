{% extends 'base.html.twig' %}

{% macro textTimeAgo(date) %}
    {# Calcul de l'écart entre la date et maintenant (grâce au temps unix) #}
    {% set now = 'now'|date("U") %}
    {% set dateTime = date|date("U") %}
    {% set timeDifference = now - dateTime %}
    {% set years = (timeDifference / (365 * 24 * 60 * 60))|round(0, 'floor') %}
    {% set months = (timeDifference / (30 * 24 * 60 * 60))|round(0, 'floor') %}
    {% set weeks = (timeDifference / (7 * 24 * 60 * 60))|round(0, 'floor') %}
    {% set days = (timeDifference / (24 * 60 * 60))|round(0, 'floor') %}
    {% set hours = (timeDifference / (3600))|round(0, 'floor') %}
    {% set minutes = (timeDifference / 60)|round(0, 'floor') %}
    {# On crée un texte en fonction du temps manquant #}
    {% if years > 0 %}
        {{ years ~ ' year' ~ (years > 1 ? 's' : '') ~ ' ago' }}
    {% elseif months > 0 %}
        {{ months ~ ' month' ~ (months > 1 ? 's' : '') ~ ' ago' }}
    {% elseif weeks > 0 %}
        {{ weeks ~ ' week' ~ (weeks > 1 ? 's' : '') ~ ' ago' }}
    {% elseif days > 0 %}
        {{ days ~ ' day' ~ (days > 1 ? 's' : '') ~ ' ago' }}
    {% elseif hours > 0 %}
        {{ hours ~ ' hour' ~ (hours > 1 ? 's' : '') ~ ' ago' }}
    {% elseif minutes > 0 %}
        {{ minutes ~ ' minute' ~ (minutes > 1 ? 's' : '') ~ ' ago' }}
    {% else %}
        {{ 'just now' }}
    {% endif %}
{% endmacro %}

{% block title %}{{ user.pseudo }}{% endblock %}

{% block body %}
    <main class="animeContainer">
        <div class="animeTopContainer">            
            <figure>
                <img src="{{ user.imageProfil ? asset('uploads/' ~ user.imageProfil) : asset('uploads/baseUser.png') }}" alt="Profile Picture of {{ user.pseudo }}" class="profileImage">
            </figure>
            <div class="animeTopRightContent">
                <h1 class="profilePseudo">{{ user.pseudo }}</h1>
                <p class="profileDescription">{{ user.description ? user.description : '<i>No description yet ...</i>' }}</p>
            </div>
        </div>
        <div class="animeRemainingContainer profile">
            <div class="profileInfosLine">
                <section class="profileInfos">
                    <h2 class="profileInfosTitle">Details</h2>
                    <p class="profileInfo"><span class="profileInfoTitle">Joined : </span>{{ user.dateInscription|date("m/d/Y H:i:s") }} <i>(UTC)</i></p>
                    <p class="profileInfo"><span class="profileInfoTitle">Date of birth : </span>{{ user.dateNaissance ? user.dateNaissance|date("m/d/Y") : '<i>Not specified</i>' }}</p>
                    {% if user.pays and user.ville %}
                        <p class="profileInfo"><span class="profileInfoTitle">Location : </span>{{ user.pays }}, {{ user.ville }}</p>
                    {% elseif user.pays or user.ville %}
                        <p class="profileInfo"><span class="profileInfoTitle">Location : </span>{{ user.pays ? user.pays : user.ville }}</p>
                    {% else %}
                        <p class="profileInfo"><span class="profileInfoTitle">Location : </span><i>Not specified</i></p>
                    {% endif %}
                </section>
                <div class="profileInfos">
                    <p><i>A venir...</i></p>
                </div>
                <div class="profileInfos buttons">
                    <a href="{{ path('anime_list_user', { id: user.id }) }}" class="profileInfosButton">ANIME LIST</a>
                    {% if app.user == user %}
                        <a href="{{ path('calendar_user') }}" class="profileInfosButton">CALENDAR</a>
                    {% endif %}
                </div>
            </div>
            {# Si l'utilisateur a des animés favoris #}
            {% if user.animes is not empty %}
                <section class="profileInfos">
                    <h2 class="profileInfosTitle">Favorites Animes</h2>
                    <div class="homeMultipleAnimes autoFill profile">
                    {% for anime in favoriteAnimesData %}
                        <figure class="homeOneAnime">
                            <a href="{{ path('show_anime', { 'id' : anime.id }) }}">
                                <div class="homeOneAnimeImageInfo">
                                    <img src="{{ anime.coverImage.large }}" alt="Cover Image of {{ anime.title.romaji|default('Unknown') }}" class="homeOneAnimeImage profile">
                                    <section class="homeHoverContent">
                                        <h2 class="homeOneAnimeInfoTitle profile">{{ anime.title.romaji|default('Unknown') }}</h2>
                                        {% if anime.episodes %}
                                            <p class="homeOneAnimeInfoSmallerInfos">{{ anime.episodes == 1 ? anime.episodes ~ ' episode' : anime.episodes ~ ' episodes' }} - {{ anime.format|default('?') }}</p>
                                        {% else %}    
                                            <p class="homeOneAnimeInfoSmallerInfos">? episodes - {{ anime.format|default('?') }}</p>
                                        {% endif %}
                                        {# On crée un tableau qu'on va remplir de tout les studios principaux (souvent 1 seuls mais possibilité d'en avoir plusieurs) #}
                                        {% set mainStudios = [] %}
                                        {% for studio in anime.studios.edges %}
                                            {% if studio.isMain %}
                                                {% set mainStudios = mainStudios|merge([studio.node.name]) %}
                                            {% endif %}
                                        {% endfor %}
                                        <p class="homeOneAnimeInfoSmallerInfos">{{ mainStudios is not empty ? mainStudios|join(' - ') : 'Unknown' }}</p>
                                        <div class="homeOneAnimeInfoGenres">
                                        {% for genre in anime.genres %}
                                            <p class="homeOneAnimeInfoOneGenre profile" style="--media-color: {{ anime.coverImage.color ? anime.coverImage.color : '#4169e1' }};">{{ genre }}</p>
                                        {% endfor %}
                                        </div>
                                    </section>
                                </div>
                            </a>
                            <figcaption class="homeOneAnimeTitle profile"><a href="{{ path('show_anime', { 'id' : anime.id }) }}">{{ anime.title.romaji|default('Unknown') }}</a></figcaption>
                        </figure>
                    {% endfor %}
                    </div>
                </section>
            {% endif %}
            {# Si l'utilisateur a des personnages favoris #}
            {% if user.personnages is not empty %}
                <section class="profileInfos">
                    <h2 class="profileInfosTitle">Favorites Characters</h2>
                    <div class="profileInfosFavoritesCharacters">
                    {% for character in favoriteCharactersData %}
                        <figure class="favoriteCharacter">
                            <a href="{{ path('show_character', { id: character.id }) }}">
                                <img src="{{ character.image.large }}" alt="Image of {{ character.name.full|default('Unknown') }}" class="favoriteCharacterImage">
                            </a>
                            <figcaption class="homeOneAnimeTitle favorites"><a href="{{ path('show_character', { id: character.id }) }}">{{ character.name.full|default('Unknown') }}</a></figcaption>
                        </figure>
                    {% endfor %}
                    </div>
                </section>
            {% endif %}
            {# Si l'utilisateur à publié de discussions #}
            {% if user.discussions is not empty %}
                <div class="profileInfos">
                    <h2 class="profileInfosTitle">Talks recently created</h2>
                    <div class="profileInfosTalks">
                    {# Boucle sur les 6 dernières discussions créées #}
                    {% for talk in user.discussions|reverse|slice(0, 6) %}
                        <section style="width: 100%;">
                            <a href="{{ path('show_discussion', { id: talk.id }) }}" class="animeRemainingRightContentPartCardsContent profile">
                                <div class="animeRemainingRightContentPartCardsTextContainer">
                                    <h2 class="animeRemainingRightContentPartCardsTop profile">{{ talk.titre }}</h2>
                                    <p class="animeRemainingRightContentPartCardsBottom" title="{{ talk.posts|first.dateCreation|date('D, d M Y,  H:i', 'UTC') }} (UTC)"><i>Created {{ _self.textTimeAgo(talk.dateCreation) }}</i></p>
                                </div>
                                <div class="animeRemainingRightContentPartCardsCommentContainer">
                                    <p class="animeRemainingRightContentPartCardsCommentText"><span class="animeRemainingRightContentPartCardsCommentTextIcon"><i class="fa-solid fa-comments"></i></span> <span class="animeRemainingRightContentPartCardsCommentTextNumber">{{ talk.posts|length }}</span></p>
                                </div>
                            </a>
                        </section>
                    {% endfor %}
                    </div>
                </div>
            {% endif %}
            {# Si l'utilisateur a publié des posts #}
            {% if user.posts is not empty %}
                <div class="profileInfos">
                    <h2 class="profileInfosTitle">Talks recently participated</h2>
                    <div class="profileInfosTalks">
                    {# On définit un tableau pour définir les discussions uniques #}
                    {% set uniqueTalks = [] %}
                    {# Boucle sur les posts allant du plus récent au plus ancien #}
                    {% for post in user.posts|reverse %}
                        {# On affiche les 6 dernières discussion auquels l'utilisateur à participer #}
                        {% if post.discussion not in uniqueTalks and uniqueTalks|length < 6 %}
                            {% set uniqueTalks = uniqueTalks|merge([post.discussion]) %}
                            <section style="width: 100%;">
                                <a href="{{ path('show_discussion', { id: post.discussion.id }) }}" class="animeRemainingRightContentPartCardsContent profile">
                                    <div class="animeRemainingRightContentPartCardsTextContainer">
                                        <h2 class="animeRemainingRightContentPartCardsTop profile">{{ post.discussion.titre }}</h2>
                                        <p class="animeRemainingRightContentPartCardsBottom" title="{{ post.discussion.posts|first.dateCreation|date('D, d M Y,  H:i', 'UTC') }} (UTC)"><i>Created {{ _self.textTimeAgo(post.discussion.dateCreation) }}</i></p>
                                    </div>
                                    <div class="animeRemainingRightContentPartCardsCommentContainer">
                                        <p class="animeRemainingRightContentPartCardsCommentText"><span class="animeRemainingRightContentPartCardsCommentTextIcon"><i class="fa-solid fa-comments"></i></span> <span class="animeRemainingRightContentPartCardsCommentTextNumber">{{ post.discussion.posts|length }}</span></p>
                                    </div>
                                </a>
                            </section>
                        {% endif %}
                    {% endfor %}
                    </div>
                </div>
            {% endif %}
        </div>
    </main>
{% endblock %}