{% extends 'base.html.twig' %}

{% block title %}Settings{% endblock %}

{% block body %}
    <main class="animeContainer">
        <div class="animeTopContainer">            
            <div class="animeTopLeftContent settings">
                <figure>
                    <img src="{{ app.user.profilePicture ? asset('uploads/' ~ app.user.profilePicture) : asset('uploads/baseUser.png') }}" alt="Profile Picture of {{ app.user.username }}" class="profileImage">
                </figure>
                <a href="{{ path('change_profile_picture_user') }}" class="profileInfosButton settings full" title="Change Picture">CHANGE PICTURE</a>
            </div>
            <div class="animeTopRightContent">
                <h1 class="profilePseudo">{{ app.user.username }} <a href="{{ path('change_username_user') }}" class="settingsChangePseudo" title="Change Username"><i class="fa-solid fa-pen-to-square"></i></a> </h1>
                <p class="profileDescription">{{ app.user.description ? app.user.description : "<i>No description yet ...</i>" }}</p>
                <a href="{{ path('change_description_user') }}" class="profileInfosButton settings large" title="Change Description">CHANGE DESCRIPTION</a>
            </div>
        </div>
        <div class="animeRemainingContainer profileInfos settings">
            <div class="settingsOne">
                <h2 class="settingsTitle">Theme</h2>
                <div class="settingsThemes">
                    <a href="{{ path('update_theme_user', { theme: 0 }) }}" class="settingsTheme light {{ app.user.darkMode == 0 ? "selectedTheme" }}" title="Switch to light theme">A</a>
                    <a href="{{ path('update_theme_user', { theme: 1 }) }}" class="settingsTheme dark {{ app.user.darkMode == 1 ? "selectedTheme" }}" title="Switch to dark theme">A</a>
                </div>
            </div>
            <div class="settingsOne">
                <h2 class="settingsTitle">Email</h2>
                <div>
                    <p class="settingsNormalText"><span class="settingsSemiBoldText">Your Email : </span><i>{{ app.user.email }}</i></p>
                    <a href="{{ path('change_email_user') }}" class="profileInfosButton settings fit" title="Change Email">CHANGE EMAIL</a>
                </div>
            </div>
            <div class="settingsOne">
                <h2 class="settingsTitle">Password</h2>
                <div>
                    <a href="{{ path('modify_password_user') }}" class="profileInfosButton settings fit" title="Change Password">CHANGE PASSWORD</a>
                </div>
            </div>
            <div class="settingsOne">
                <h2 class="settingsTitle">Account visibility</h2>
                <p class="settingsNormalText"><i>Still to come ...</i></p>
            </div>
            <div class="settingsOne">
                <h2 class="settingsTitle">Calendar notifications</h2>
                <p class="settingsNormalText"><i>Still to come ...</i></p>
            </div>
            <div class="settingsOne">
                <h2 class="settingsTitle">Delete account</h2>
                <div>
                    <a href="{{ path('delete_account_user') }}" class="profileInfosButton settings fit" style="background-color: #FF4136;" title="Delete Account">DELETE ACCOUNT</a>
                </div>
            </div>
        </div>
    </main>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        // Récupération des boutons de changement de thème
        var themeToggles = document.querySelectorAll('.settingsTheme');

        // Ajout d'un écouteur d'événements pour le clic sur un bouton de changement de thème
        themeToggles.forEach(function(themeToggle){
            themeToggle.addEventListener('click', async function(event) {
                event.preventDefault(); // Empêcher le comportement par défaut du lien
                
                // Récupération du thème du bouton
                var currentTheme = themeToggle.classList.contains('dark') ? 1 : 0;

                // Si le theme n'est pas celui séléctionné, on le change
                if(!themeToggle.classList.contains('selectedTheme')){
                    // Envoi d'une requête fetch pour changer le thème
                    await fetch("{{ path('update_theme_user', { theme: '__theme__' }) }}".replace('__theme__', currentTheme), {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                    })
                    .then(response => {
                        if(!response.ok){
                            throw new Error('Failed to update theme');
                        }
                        // Ajout ou suppression de la classe 'dark' au body en fonction du thème actuel
                        if(currentTheme == 1) {
                            document.body.classList.add('dark');
                        }
                        else{
                            document.body.classList.remove('dark');
                        }

                        // Suppression de la classe selectedTheme aux boutons de thème
                        document.querySelectorAll('.settingsTheme').forEach(function(element){
                            element.classList.remove('selectedTheme');
                        });
                        // Ajout de la classe selectedTheme au bouton cliqué
                        themeToggle.classList.add('selectedTheme');
                    })
                    .catch(error => {
                        console.error(error);
                        alert('Failed to update theme');
                    });
                }

            });
        });
    </script>
{% endblock %}