{% extends 'base.html.twig' %}

{% block title %}Modify your list{% endblock %}
{% set anime = animeData.data.Media %}
{% set idApi = userRegarderAnime.anime.idApi %}

{% block body %}
    <main class="animeListModifyContainer">
        <div>
            <figure>
                <a href="{{ path('show_anime', { 'id' : idApi }) }}" title="{{ anime.title.romaji|default('Unknown') }}">
                    <img src="{{ anime.coverImage.large }}" alt="Cover Image of {{ anime.title.romaji|default('Unknown') }}" class="animeImage">
                </a>
                <figcaption class="homeOneAnimeTitle"><a href="{{ path('show_anime', { 'id' : idApi }) }}" title="{{ anime.title.romaji|default('Unknown') }}">{{ anime.title.romaji|default('Unknown') }}</a></figcaption>
            </figure>
        </div>
        {{ form_start(form, { 'attr' : { 'class': 'animeListModifyForm' } }) }}
            <div class="securityFormRow animeList">
                {{ form_label(form.startedWatching, 'Started Watching') }}
                {{ form_widget(form.startedWatching) }}
            </div>
            <div class="securityFormRow animeList">
                {{ form_label(form.endedWatching, 'Finished Watching') }}
                {{ form_widget(form.endedWatching) }}
            </div>
            <div class="securityFormRow animeList">
                {{ form_label(form.status, 'Status') }}
                {{ form_widget(form.status) }}
            </div>
            <div class="securityFormRow animeList">
                {{ form_label(form.nbEpisodesWatched, 'Episodes Watched') }}
                {{ form_widget(form.nbEpisodesWatched) }}
            </div>
            <a href="{{ path('remove_anime_from_list_user', { id : userRegarderAnime.id }) }}" class="animeButtonAddTo delete" title="Delete from list">Delete</a>
            <button type="submit" class="securityFormSubmitButton" title="Save Changes">Save</button>
        {{ form_end(form) }}
    </main>

    {% block javascripts %}
        {{ parent() }}

        <script>
            // On crée un écouteur quand la page est bien chargé
            document.addEventListener("DOMContentLoaded", function (){
                // On récupère les inputs concernés (état et nombre d'épisodes vu)
                var statusField = document.getElementById("modify_anime_list_form_status");
                var episodesWatchedField = document.getElementById("modify_anime_list_form_nombreEpisodeVu");
            
                // On crée une fonction qui change l'input du nombre d'épisodes vu en fonction de l'état
                function changeEpisodesWatchedField(){
                    // On récupère la valeur de l'état
                    var selectedState = statusField.value;
                    // Si l'anime a été vu totalement, on ne peut plus changer le nombre d'épisodes vu et il reste au maximum d'épisodes de l'animé
                    if(selectedState === "Completed"){
                        episodesWatchedField.value = episodesWatchedField.getAttribute("max");
                        episodesWatchedField.readOnly = true;
                    }
                    else{
                        episodesWatchedField.readOnly = false;
                    }
                }
                // On applique la fonction créée dès que la page est chargé
                changeEpisodesWatchedField();
                // On rajoute une écoute sur le changement de l'état de l'animé
                statusField.addEventListener("change", function (){
                    changeEpisodesWatchedField();
                });
            });
        </script>
    {% endblock %}
{% endblock %}