{% extends 'base.html.twig' %}

{% block title %}{{ user.pseudo }}'s Anime List{% endblock %}

{% block body %}
    <main>
        <h1 class="homeTitle">{{ user.pseudo }}'s Anime List</h1>
        <section class="animeListButtonsContainer">
            <button class="animeListButton active" id="animeListButtonAll">ALL</button>
            <button class="animeListButton" id="animeListButtonWatching">WATCHING</button>
            <button class="animeListButton" id="animeListButtonCompleted">COMPLETED</button>
            <button class="animeListButton" id="animeListButtonPlanned">PLANNED TO WATCH</button>
        </section>
        <section class="animeListContainer" id="animeListAll">
            {% for key, anime in animesDataByState["Watching"] %}
                <figure>
                    <a href="{{ path('change_anime_list_user', { id: key }) }}"><i class="fa-solid fa-bars animeMenu"></i></a>
                    <div class="animeEpisodesWatchedContainer">
                        <a href="#"><i class="fa-solid fa-minus animeEpisodesWatchedControl minus"></i></a>
                        <p class="animeEpisodesWatched">{{ anime.episodesWatched }}/{{ anime.episodes ? anime.episodes : "?" }}</p>
                        <a href="{{ path('add_episode_anime_list_user', { id : key }) }}"><i class="fa-solid fa-plus animeEpisodesWatchedControl plus"></i></a>
                    </div>
                    <img src="{{ anime.coverImage.large }}" alt="Cover image of {{ anime.title.romaji }}" class="animeListAnimeImage">
                    <figcaption class="homeOneAnimeTitle">{{ anime.title.romaji }}</figcaption>
                </figure>
            {% endfor %}
            {% for key, anime in animesDataByState["Completed"] %}
                <figure>
                    <a href="{{ path('change_anime_list_user', { id: key }) }}"><i class="fa-solid fa-bars animeMenu"></i></a>
                    <img src="{{ anime.coverImage.large }}" alt="Cover image of {{ anime.title.romaji }}" class="animeListAnimeImage">
                    <figcaption class="homeOneAnimeTitle">{{ anime.title.romaji }}</figcaption>
                </figure>
            {% endfor %}
            {% for key, anime in animesDataByState["Plan to watch"] %}
                <figure>
                    <a href="{{ path('change_anime_list_user', { id: key }) }}"><i class="fa-solid fa-bars animeMenu"></i></a>
                    <img src="{{ anime.coverImage.large }}" alt="Cover image of {{ anime.title.romaji }}" class="animeListAnimeImage">
                    <figcaption class="homeOneAnimeTitle">{{ anime.title.romaji }}</figcaption>
                </figure>
            {% endfor %}
        </section>
        <section class="animeListContainer" id="animeListWatching">
            {% for key, anime in animesDataByState["Watching"] %}
                <figure>
                    <a href="{{ path('change_anime_list_user', { id: key }) }}"><i class="fa-solid fa-bars animeMenu"></i></a>
                    <div class="animeEpisodesWatchedContainer">
                        <a href="#"><i class="fa-solid fa-minus animeEpisodesWatchedControl minus"></i></a>
                        <p class="animeEpisodesWatched">{{ anime.episodesWatched }}/{{ anime.episodes ? anime.episodes : "?" }}</p>
                        <a href="{{ path('add_episode_anime_list_user', { id : key }) }}"><i class="fa-solid fa-plus animeEpisodesWatchedControl plus"></i></a>
                    </div>
                    <img src="{{ anime.coverImage.large }}" alt="Cover image of {{ anime.title.romaji }}" class="animeListAnimeImage">
                    <figcaption class="homeOneAnimeTitle">{{ anime.title.romaji }}</figcaption>
                </figure>
            {% endfor %}
        </section>
        <section class="animeListContainer" id="animeListCompleted">
            {% for key, anime in animesDataByState["Completed"] %}
                <figure>
                    <a href="{{ path('change_anime_list_user', { id: key }) }}"><i class="fa-solid fa-bars animeMenu"></i></a>
                    <img src="{{ anime.coverImage.large }}" alt="Cover image of {{ anime.title.romaji }}" class="animeListAnimeImage">
                    <figcaption class="homeOneAnimeTitle">{{ anime.title.romaji }}</figcaption>
                </figure>
            {% endfor %}
        </section>
        <section class="animeListContainer" id="animeListPlanned">
            {% for key, anime in animesDataByState["Plan to watch"] %}
                <figure>
                    <a href="{{ path('change_anime_list_user', { id: key }) }}"><i class="fa-solid fa-bars animeMenu"></i></a>
                    <img src="{{ anime.coverImage.large }}" alt="Cover image of {{ anime.title.romaji }}" class="animeListAnimeImage">
                    <figcaption class="homeOneAnimeTitle">{{ anime.title.romaji }}</figcaption>
                </figure>
            {% endfor %}
        </section>
    </main>

    {% block script %}
        <script>
            // Récupération des boutons de la page de la liste d'anime
            const buttons = document.querySelectorAll(".animeListButton");

            // On rajoute une écoute du click
            buttons.forEach((button) => {
                // Quand un des boutons est cliqué
                button.addEventListener("click", () => {
                    // On enlève la classe active à tout les boutons
                    buttons.forEach((btn) => {
                        btn.classList.remove("active");
                    });

                    // On ajoute la classe active au bouton cliqué
                    button.classList.add("active");
                });
            });

            // Récupération des boutons de manière distinctives
            const animeListButtonAll = document.getElementById("animeListButtonAll");
            const animeListButtonWatching = document.getElementById("animeListButtonWatching");
            const animeListButtonCompleted = document.getElementById("animeListButtonCompleted");
            const animeListButtonPlanned = document.getElementById("animeListButtonPlanned");

            // Récupération des sections de manières distinctives
            const animeListSectionAll = document.getElementById("animeListAll");
            const animeListSectionWatching = document.getElementById("animeListWatching");
            const animeListSectionCompleted = document.getElementById("animeListCompleted");
            const animeListSectionPlanned = document.getElementById("animeListPlanned");

            // Ajout d'écouteur d'evenement
            animeListButtonAll.addEventListener("click", () => showSection(animeListSectionAll));
            animeListButtonWatching.addEventListener("click", () => showSection(animeListSectionWatching));
            animeListButtonCompleted.addEventListener("click", () => showSection(animeListSectionCompleted));
            animeListButtonPlanned.addEventListener("click", () => showSection(animeListSectionPlanned));

            // Fonction qui gère le click d'un bouton pour faire afficher une section
            function showSection(selectedSection){
                const sections = [animeListSectionAll, animeListSectionWatching, animeListSectionCompleted, animeListSectionPlanned];

                sections.forEach(section => {
                    section.style.display = "none";
                });

                selectedSection.style.display = "grid";
            }

            // On affiche de base la section all
            showSection(animeListSectionAll);
        </script>
    {% endblock %}
{% endblock %}